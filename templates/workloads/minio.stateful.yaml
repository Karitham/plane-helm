# {{- if .Values.minio.enabled }}
# {{ $minioAdress := printf "%s-minio.%s.svc.cluster.local:9000" .Release.Name .Release.Namespace }}
# apiVersion: batch/v1
# kind: Job
# metadata:
#   namespace: {{ .Release.Namespace }}
#   name: {{ .Release.Name }}-minio-bucket
# spec:
#   backoffLimit: 6
#   completionMode: NonIndexed
#   template:
#     metadata:
#       namespace: {{ .Release.Namespace }}
#     spec:
#       restartPolicy: OnFailure
#       initContainers:
#         - name: init
#           image: busybox
#           command: ['sh', '-c', "until nslookup {{ $minioAdress }}; do echo waiting for {{ .Release.Name }}-minio; sleep 2; done"]
#       containers:
#         - command:
#             - /bin/sh
#           args:
#             - '-c'
#             - >-
#               /usr/bin/mc config host add plane-app-minio
#               http://{{$minioAdress}} "$AWS_ACCESS_KEY_ID" "$AWS_SECRET_ACCESS_KEY";
#               /usr/bin/mc mb plane-app-minio/$AWS_S3_BUCKET_NAME;
#               /usr/bin/mc anonymous set download plane-app-minio/$AWS_S3_BUCKET_NAME; exit 0;
#           envFrom:
#             - configMapRef:
#                 name: {{ .Release.Name }}-doc-store-vars
#                 optional: false
#             - secretRef:
#                 name: {{ .Release.Name }}-doc-store-secrets
#                 optional: false
#           image: minio/mc
#           imagePullPolicy: Always
#           name: {{ .Release.Name }}-minio-bucket
#       serviceAccount: {{ .Release.Name }}-srv-account
#       serviceAccountName: {{ .Release.Name }}-srv-account
#       terminationGracePeriodSeconds: 120
# {{- end }}
