
apiVersion: v1
kind: Service
metadata:
  namespace: {{ .Release.Namespace }}
  name: {{ .Release.Name }}-api
  labels:
    app.name: {{ .Release.Namespace }}-{{ .Release.Name }}-api
spec:
  clusterIP: None
  ports:
  - name: api-8000
    port: 8000
    protocol: TCP
    targetPort: 8000
  selector:
    app.name: {{ .Release.Namespace }}-{{ .Release.Name }}-api

---

apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Release.Namespace }}
  name: {{ .Release.Name }}-api-wl
spec:
  replicas: {{ .Values.api.replicas | default 1}}
  selector:
    matchLabels:
      app.name: {{ .Release.Namespace }}-{{ .Release.Name }}-api
  template:
    metadata:
      namespace: {{ .Release.Namespace }}
      labels:
        app.name: {{ .Release.Namespace }}-{{ .Release.Name }}-api
    spec:
      containers:
      - name: {{ .Release.Name }}-api
        {{ $i := .Values.api.image }}
        imagePullPolicy: "{{ $i.pullPolicy }}"
        image: "{{ $i.name }}:{{ coalesce $i.tag .Values.global.image.tag .Chart.AppVersion "stable" }}"
        stdin: true
        tty: true
        resources: {{ toYaml .Values.api.resources | nindent 10 }}
        command:
          - ./bin/docker-entrypoint-api.sh
        envFrom:
          - configMapRef:
              name: {{ .Release.Name }}-app-vars
              optional: false
          - secretRef:
              name: {{ .Release.Name }}-app-secrets
              optional: false
          - configMapRef:
              name: {{ .Release.Name }}-doc-store-vars
              optional: false
          - secretRef:
              name: {{ .Release.Name }}-doc-store-secrets
              optional: false
        readinessProbe:
          failureThreshold: 30
          httpGet:
            path: /
            port: 8000
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1

      serviceAccount: {{ .Release.Name }}-srv-account
      serviceAccountName: {{ .Release.Name }}-srv-account

---